let loadedContacts = [];
let tasks = [];
let logedInPerson = '';
let logedInGuest = 'Dear Guest';
let nextTaskId = 0;
let logedInAsGuest = false;
let logedInWithName = false;

logedInPerson = JSON.parse(localStorage.getItem('logedIn Person'));
logedInAsGuest = JSON.parse(localStorage.getItem('logedIn as Guest'));
logedInWithName = JSON.parse(localStorage.getItem('logedIn with Name'));

const STORAGE_TOKEN = '0SUZWQWFOE8PEF8QOE5A57VYG0N48AWXZYFBZWYB';
const STORAGE_URL = 'https://remote-storage.developerakademie.org/item';

async function setItem(key, value) {
	const payload = {key, value, token:STORAGE_TOKEN}
	return fetch(STORAGE_URL, {method: 'POST', body: JSON.stringify(payload)})
	.then(resp => resp.json())
}

async function getItem(key) {
    const url = `${STORAGE_URL}?key=${key}&token=${STORAGE_TOKEN}`;
    return fetch(url).then(res => res.json()).then(res => {
        // Verbesserter code
        if (res.data) {
            return res.data.value;
        } throw `Could not find data with key "${key}".`;
    });
}

async function loadContacts(){
  try {
  loadedContacts = JSON.parse(await getItem('contacts'));
  } catch(e){
  console.error('Loading error:', e);
  }
}

async function loadTasks() {
  tasks = JSON.parse(await getItem('tasks'));
  nextTaskId = JSON.parse(await getItem('nextTaskId'));
}

function includeHTML() {
    var z, i, elmnt, file, xhttp;
    /* Loop through a collection of all HTML elements: */
   z = document.getElementsByTagName("*");
    for (i = 0; i < z.length; i++) {
     elmnt = z[i];
      /*search for elements with a certain atrribute:*/
     file = elmnt.getAttribute("w3-include-html");
      if (file) {
        /* Make an HTTP request using the attribute value as the file name: */
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4) {
            if (this.status == 200) {elmnt.innerHTML = this.responseText;}
            if (this.status == 404) {elmnt.innerHTML = "Page not found.";}
            /* Remove the attribute, and call this function once more: */
            elmnt.removeAttribute("w3-include-html");
            includeHTML();
         }
        }
       xhttp.open("GET", file, true);
        xhttp.send();
        /* Exit the function: */
        return;
     }
   }
}

